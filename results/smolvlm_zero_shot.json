[
    {
        "cadquery": "import cadquery as cq\n# Generating a workplane for sketch 0\nwp_sketch0 = cq.Workplane(cq.Plane(cq.Vector(0.0, -0.75, -0.75), cq.Vector(3.749399456654644e-33, 1.0, -6.123233995736766e-17), cq.Vector(1.0, 0.0, 6.123233995736766e-17)))\nloop0=wp_sketch0.moveTo(1.5, 0.0).lineTo(1.5, 1.5).lineTo(0.0, 1.5).lineTo(0.0, 0.0).close()\nloop1=wp_sketch0.moveTo(0.7578947368421053, 0.5368421052631579).circle(0.14210526315789473)\nloop2=wp_sketch0.moveTo(0.7578947368421053, 0.9315789473684211).circle(0.14210526315789473)\nsolid0=wp_sketch0.add(loop0).add(loop1).add(loop2).extrude(0.03125)\nsolid=solid0\n",
        "output": "User:<image>Generate the CADQuery code needed to create the CAD for the provided image. Just the code, no other words.\nAssistant: CADQuery(\n    \"Create a 3D model of a double outlet switch cover plate.\",\n    {\n        \"Geometry\": {\n            \"Type\": \"Rectangle\",\n            \"Properties\": {\n                \"FillColor\": \"Gray\",\n                \"BorderColor\": \"Gray\",\n                \"BorderThickness\": 1,\n                \"CornerRadius\": 0\n            },\n            \"Attributes\": {\n                \"Attributes\": {\n                    \"Attributes\": {\n                        \"Attributes\": {\n                            \"Attributes\": {\n                                \"Attributes\": {\n                                    \"Attributes\": {\n                                        \"Attributes\": {\n                                            \"Attributes\": {\n                                                \"Attributes\": {\n                                                    \"Attributes\": {\n                                                        \"Attributes\": {\n                                                            \"Attributes\": {\n                                                                \"Attributes\": {\n                                                                \"Attributes\": {\n                                                                    \"Attributes\": {\n                                                                        \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Attributes\": {\n                                                                            \"Att"
    },
    {
        "cadquery": "import cadquery as cq\n# Generating a workplane for sketch 0\nwp_sketch0 = cq.Workplane(cq.Plane(cq.Vector(-0.5625, 0.0, -0.1875), cq.Vector(1.0, 6.123233995736766e-17, -6.123233995736766e-17), cq.Vector(6.123233995736766e-17, -1.0, 6.123233995736766e-17)))\nloop0=wp_sketch0.moveTo(0.0, 0.375).threePointArc((-0.1875, 0.1875), (0.0, 0.0)).close()\nsolid0=wp_sketch0.add(loop0).extrude(0.125)\nsolid=solid0\n# Generating a workplane for sketch 1\nwp_sketch1 = cq.Workplane(cq.Plane(cq.Vector(0.5625, 0.0, -0.1875), cq.Vector(1.0, 6.123233995736766e-17, -6.123233995736766e-17), cq.Vector(6.123233995736766e-17, -1.0, 6.123233995736766e-17)))\nloop1=wp_sketch1.moveTo(0.0, 0.0).threePointArc((0.1875, 0.1875), (0.0, 0.375)).lineTo(0.0, 0.0).close()\nsolid1=wp_sketch1.add(loop1).extrude(0.125)\nsolid=solid.union(solid1)\n# Generating a workplane for sketch 2\nwp_sketch2 = cq.Workplane(cq.Plane(cq.Vector(-0.5625, 0.0, -0.1875), cq.Vector(1.0, 6.123233995736766e-17, -6.123233995736766e-17), cq.Vector(6.123233995736766e-17, -1.0, 6.123233995736766e-17)))\nloop2=wp_sketch2.moveTo(1.125, 0.0).threePointArc((0.9355263157894738, 0.18947368421052632), (1.125, 0.37894736842105264)).lineTo(0.0, 0.37894736842105264).threePointArc((0.18947368421052632, 0.18947368421052632), (0.0, 0.0)).close()\nsolid2=wp_sketch2.add(loop2).extrude(0.125)\nsolid=solid.union(solid2)\n# Generating a workplane for sketch 3\nwp_sketch3 = cq.Workplane(cq.Plane(cq.Vector(-0.5625, 0.0, -0.1875), cq.Vector(1.0, 6.123233995736766e-17, -6.123233995736766e-17), cq.Vector(6.123233995736766e-17, -1.0, 6.123233995736766e-17)))\nloop3=wp_sketch3.moveTo(0.0, 0.0).threePointArc((0.1875, 0.1875), (0.0, 0.375)).lineTo(0.0, 0.0).close()\nsolid3=wp_sketch3.add(loop3).extrude(0.125)\nsolid=solid.union(solid3)\n# Generating a workplane for sketch 4\nwp_sketch4 = cq.Workplane(cq.Plane(cq.Vector(0.5625, 0.0, -0.1875), cq.Vector(1.0, 6.123233995736766e-17, -6.123233995736766e-17), cq.Vector(6.123233995736766e-17, -1.0, 6.123233995736766e-17)))\nloop4=wp_sketch4.moveTo(0.0, 0.375).threePointArc((-0.1875, 0.1875), (0.0, 0.0)).close()\nsolid4=wp_sketch4.add(loop4).extrude(0.125)\nsolid=solid.union(solid4)\n# Generating a workplane for sketch 5\nwp_sketch5 = cq.Workplane(cq.Plane(cq.Vector(-0.640625, -0.125, 0.0), cq.Vector(1.0, 6.123233995736766e-17, -6.123233995736766e-17), cq.Vector(6.123233995736766e-17, -1.0, 6.123233995736766e-17)))\nloop5=wp_sketch5.moveTo(0.0734375, 0.0).circle(0.07500000000000001)\nsolid5=wp_sketch5.add(loop5).extrude(-0.25)\nsolid=solid.cut(solid5)\n# Generating a workplane for sketch 6\nwp_sketch6 = cq.Workplane(cq.Plane(cq.Vector(0.484375, -0.125, 0.0), cq.Vector(1.0, 6.123233995736766e-17, -6.123233995736766e-17), cq.Vector(6.123233995736766e-17, -1.0, 6.123233995736766e-17)))\nloop6=wp_sketch6.moveTo(0.07500000000000001, 0.0).circle(0.07500000000000001)\nsolid6=wp_sketch6.add(loop6).extrude(-0.25)\nsolid=solid.cut(solid6)\n",
        "output": "User:<image>Generate the CADQuery code needed to create the CAD for the provided image. Just the code, no other words.\nAssistant: CADQuery(model: models.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components.components"
    },
    {
        "cadquery": "import cadquery as cq\n# Generating a workplane for sketch 0\nwp_sketch0 = cq.Workplane(cq.Plane(cq.Vector(-0.578125, 0.0, 0.0), cq.Vector(1.0, 0.0, 0.0), cq.Vector(0.0, 0.0, 1.0)))\nloop0=wp_sketch0.moveTo(0.5842105263157895, 0.0).circle(0.5842105263157895)\nloop1=wp_sketch0.moveTo(0.0, 0.0).threePointArc((0.17511815627328084, -0.29900544272020846), (0.48684210526315785, -0.45032894736842105)).lineTo(0.48684210526315785, -0.09736842105263158).lineTo(0.12171052631578946, -0.09736842105263158).close()\nloop2=wp_sketch0.moveTo(0.5598684210526316, 0.29210526315789476).lineTo(0.5598684210526316, 0.24342105263157893).lineTo(0.5963815789473684, 0.24342105263157893).lineTo(0.5963815789473684, 0.29210526315789476).lineTo(0.6450657894736842, 0.29210526315789476).lineTo(0.6450657894736842, 0.5233552631578947).lineTo(0.5111842105263158, 0.5233552631578947).lineTo(0.5111842105263158, 0.29210526315789476).close()\nloop3=wp_sketch0.moveTo(0.5111842105263158, 0.29210526315789476).threePointArc((0.7137890668764648, 0.017989379338933742), (1.0345394736842104, -0.09736842105263158)).lineTo(0.669407894736842, -0.09736842105263158).lineTo(0.669407894736842, -0.45032894736842105).close()\nsolid0=wp_sketch0.add(loop0).add(loop1).add(loop2).add(loop3).extrude(0.046875)\nsolid=solid0\n# Generating a workplane for sketch 1\nwp_sketch1 = cq.Workplane(cq.Plane(cq.Vector(-0.1015625, 0.25, 0.046875), cq.Vector(1.0, 0.0, 0.0), cq.Vector(0.0, 0.0, 1.0)))\nloop4=wp_sketch1.moveTo(0.03848684210526316, 0.0).lineTo(0.03848684210526316, -0.044901315789473685).lineTo(0.16036184210526316, -0.044901315789473685).lineTo(0.16036184210526316, 0.0).lineTo(0.19884868421052632, 0.0).lineTo(0.19884868421052632, 0.3046875).lineTo(0.0, 0.3046875).lineTo(0.0, 0.0).close()\nloop5=wp_sketch1.moveTo(0.07697368421052632, 0.03848684210526316).lineTo(0.07697368421052632, -0.00962171052631579).lineTo(0.121875, -0.00962171052631579).lineTo(0.121875, 0.03848684210526316).lineTo(0.16036184210526316, 0.03848684210526316).lineTo(0.16036184210526316, 0.26620065789473685).lineTo(0.03848684210526316, 0.26620065789473685).lineTo(0.03848684210526316, 0.03848684210526316).close()\nsolid1=wp_sketch1.add(loop4).add(loop5).extrude(0.046875)\nsolid=solid.union(solid1)\n",
        "output": "User:<image>Generate the CADQuery code needed to create the CAD for the provided image. Just the code, no other words.\nAssistant: CADQuery(model: 'round-top-lid', properties: { 'top-lid-cut-out': { 'top-lid-cut-out-type': 'cut-out', 'top-lid-cut-out-location': 'top-right' } }, options: { 'show-toolbars': false }).Create();"
    },
    {
        "cadquery": "import cadquery as cq\n# Generating a workplane for sketch 0\nwp_sketch0 = cq.Workplane(cq.Plane(cq.Vector(-0.75, -0.640625, 0.0), cq.Vector(1.0, 0.0, 0.0), cq.Vector(0.0, 0.0, 1.0)))\nloop0=wp_sketch0.moveTo(0.0, 0.0).threePointArc((0.03237240839517088, -0.07815390739430259), (0.1105263157894737, -0.1105263157894737)).lineTo(1.3894736842105264, -0.1105263157894737).threePointArc((1.4676275916048291, -0.07815390739430259), (1.5, 0.0)).lineTo(1.5, 1.2789473684210526).threePointArc((1.4676275916048291, 1.3571012758153556), (1.3894736842105264, 1.3894736842105264)).lineTo(0.1105263157894737, 1.3894736842105264).threePointArc((0.03237240839517088, 1.3571012758153556), (0.0, 1.2789473684210526)).lineTo(0.0, 0.0).close()\nloop1=wp_sketch0.moveTo(0.7578947368421053, 0.631578947368421).circle(0.18947368421052632)\nsolid0=wp_sketch0.add(loop0).add(loop1).extrude(0.2265625)\nsolid=solid0\n# Generating a workplane for sketch 1\nwp_sketch1 = cq.Workplane(cq.Plane(cq.Vector(-0.375, 0.0, 0.2265625), cq.Vector(1.0, 0.0, 0.0), cq.Vector(0.0, 0.0, 1.0)))\nloop2=wp_sketch1.moveTo(0.37894736842105264, 0.0).circle(0.37894736842105264)\nloop3=wp_sketch1.moveTo(0.37894736842105264, 0.0).circle(0.18947368421052632)\nsolid1=wp_sketch1.add(loop2).add(loop3).extrude(-0.109375)\nsolid=solid.cut(solid1)\n",
        "output": "User:<image>Generate the CADQuery code needed to create the CAD for the provided image. Just the code, no other words.\nAssistant: Import('cadquery')\nquery = cadquery with (\n    square(100)\n    .fill(Material('gray'), 0.5)\n    .hole(100, center=true)\n)\nrender(query)"
    },
    {
        "cadquery": "import cadquery as cq\n# Generating a workplane for sketch 0\nwp_sketch0 = cq.Workplane(cq.Plane(cq.Vector(-0.375, -0.375, 0.0), cq.Vector(1.0, 0.0, 0.0), cq.Vector(0.0, 0.0, 1.0)))\nloop0=wp_sketch0.moveTo(0.75, 0.0).lineTo(0.75, 0.75).lineTo(0.0, 0.75).lineTo(0.0, 0.0).close()\nloop1=wp_sketch0.moveTo(0.37894736842105264, 0.37894736842105264).circle(0.13421052631578947)\nsolid0=wp_sketch0.add(loop0).add(loop1).extrude(0.75)\nsolid=solid0\n",
        "output": "User:<image>Generate the CADQuery code needed to create the CAD for the provided image. Just the code, no other words.\nAssistant: CADQuery('Add: \"Add a hole to the top of the cube\"')"
    },
    {
        "cadquery": "import cadquery as cq\n# Generating a workplane for sketch 0\nwp_sketch0 = cq.Workplane(cq.Plane(cq.Vector(-0.75, 0.0, -0.0703125), cq.Vector(1.0, 6.123233995736766e-17, -6.123233995736766e-17), cq.Vector(6.123233995736766e-17, -1.0, 6.123233995736766e-17)))\nloop0=wp_sketch0.moveTo(0.2368421052631579, 0.0).lineTo(0.2368421052631579, 0.07105263157894737).threePointArc((0.3871425728121664, 0.43391005876678124), (0.75, 0.5842105263157895)).lineTo(0.75, 0.6552631578947369).threePointArc((0.3329534067804907, 0.4857869099130876), (0.15789473684210525, 0.07105263157894737)).lineTo(0.0, 0.07105263157894737).lineTo(0.0, 0.0).close()\nsolid0=wp_sketch0.add(loop0).extrude(0.234375)\nsolid=solid0\n# Generating a workplane for sketch 1\nwp_sketch1 = cq.Workplane(cq.Plane(cq.Vector(-0.75, 0.0, -0.0703125), cq.Vector(1.0, 6.123233995736766e-17, -6.123233995736766e-17), cq.Vector(6.123233995736766e-17, -1.0, 6.123233995736766e-17)))\nloop1=wp_sketch1.moveTo(0.2368421052631579, 0.0).lineTo(0.2368421052631579, 0.07105263157894737).threePointArc((0.3871425728121664, 0.43391005876678124), (0.75, 0.5842105263157895)).lineTo(0.75, 0.6552631578947369).threePointArc((0.3329534067804907, 0.4857869099130876), (0.15789473684210525, 0.07105263157894737)).lineTo(0.0, 0.07105263157894737).lineTo(0.0, 0.0).close()\nsolid1=wp_sketch1.add(loop1).extrude(0.234375)\nsolid=solid.union(solid1)\n# Generating a workplane for sketch 2\nwp_sketch2 = cq.Workplane(cq.Plane(cq.Vector(0.0, 0.0, 0.515625), cq.Vector(1.0, 6.123233995736766e-17, -6.123233995736766e-17), cq.Vector(6.123233995736766e-17, -1.0, 6.123233995736766e-17)))\nloop2=wp_sketch2.moveTo(0.0, 0.0).threePointArc((0.36285742718783365, -0.1503004675490085), (0.5131578947368421, -0.5131578947368421)).lineTo(0.5131578947368421, -0.5842105263157895).lineTo(0.75, -0.5842105263157895).lineTo(0.75, -0.5131578947368421).lineTo(0.5921052631578948, -0.5131578947368421).threePointArc((0.41868164675519265, -0.09447624798164948), (0.0, 0.07894736842105263)).lineTo(0.0, 0.0).close()\nsolid2=wp_sketch2.add(loop2).extrude(0.234375)\nsolid=solid.union(solid2)\n# Generating a workplane for sketch 3\nwp_sketch3 = cq.Workplane(cq.Plane(cq.Vector(-0.71875, -0.125, 0.0), cq.Vector(1.0, 0.0, 0.0), cq.Vector(0.0, 0.0, 1.0)))\nloop3=wp_sketch3.moveTo(0.04736842105263158, 0.0).circle(0.04638157894736842)\nsolid3=wp_sketch3.add(loop3).extrude(-0.390625)\nsolid=solid.cut(solid3)\n# Generating a workplane for sketch 4\nwp_sketch4 = cq.Workplane(cq.Plane(cq.Vector(0.625, -0.125, 0.0), cq.Vector(1.0, 0.0, 0.0), cq.Vector(0.0, 0.0, 1.0)))\nloop4=wp_sketch4.moveTo(0.04736842105263158, 0.0).circle(0.04638157894736842)\nsolid4=wp_sketch4.add(loop4).extrude(-0.390625)\nsolid=solid.cut(solid4)\n",
        "output": "User:<image>Generate the CADQuery code needed to create the CAD for the provided image. Just the code, no other words.\nAssistant: CADQuery( {\n    \"Geometry\": {\n        \"Cylinder\": {\n            \"Top\": {\n                \"TopPlane\": {\n                    \"Orders\": [\n                        \"1\",\n                        \"2\"\n                    ]\n                },\n                \"Bottom\": {\n                    \"Orders\": [\n                        \"1\",\n                        \"2\"\n                    ]\n                }\n            },\n            \"TopPlane\": {\n                \"Orders\": [\n                    \"1\",\n                    \"2\"\n                ]\n            }\n        },\n        \"Attributes\": {\n            \"Material\": \"gray\"\n        }\n    } )"
    },
    {
        "cadquery": "import cadquery as cq\n# Generating a workplane for sketch 0\nwp_sketch0 = cq.Workplane(cq.Plane(cq.Vector(-0.65625, -0.75, 0.0), cq.Vector(1.0, 0.0, 0.0), cq.Vector(0.0, 0.0, 1.0)))\nloop0=wp_sketch0.moveTo(1.3105263157894738, 0.0).lineTo(1.3105263157894738, 1.5).lineTo(0.0, 1.5).lineTo(0.0, 0.0).close()\nsolid0=wp_sketch0.add(loop0).extrude(0.5234375, both=True)\nsolid=solid0\n",
        "output": "User:<image>Generate the CADQuery code needed to create the CAD for the provided image. Just the code, no other words.\nAssistant: let obj = {\n    type: \"box\",\n    top: {\n        material: \"gray\",\n        color: \"gray\"\n    },\n    bottom: {\n        material: \"gray\",\n        color: \"gray\"\n    }\n}\ncadquery.create(obj)"
    },
    {
        "cadquery": "import cadquery as cq\n# Generating a workplane for sketch 0\nwp_sketch0 = cq.Workplane(cq.Plane(cq.Vector(0.0, -0.75, -0.390625), cq.Vector(3.749399456654644e-33, 1.0, -6.123233995736766e-17), cq.Vector(1.0, 0.0, 6.123233995736766e-17)))\nloop0=wp_sketch0.moveTo(1.1484375, 0.0).lineTo(1.1484375, 0.9912828947368421).lineTo(0.0, 0.9912828947368421).lineTo(0.0, 0.0).close()\nsolid0=wp_sketch0.add(loop0).extrude(0.15625)\nsolid=solid0\n",
        "output": "User:<image>Generate the CADQuery code needed to create the CAD for the provided image. Just the code, no other words.\nAssistant: CADQuery(\n    \"Create a 3D model of a rectangular block.\",\n    {\n        \"Geometry\": {\n            \"Type\": \"Rectangle\",\n            \"Properties\": {\n                \"FillColor\": \"Gray\",\n                \"BorderColor\": \"Gray\",\n                \"BorderWidth\": \"1\",\n                \"TopLeftCorner\": [0, 0],\n                \"TopRightCorner\": [1, 0],\n                \"BottomLeftCorner\": [0, 1],\n                \"BottomRightCorner\": [1, 1]\n            }\n        }\n    }\n);"
    },
    {
        "cadquery": "import cadquery as cq\n# Generating a workplane for sketch 0\nwp_sketch0 = cq.Workplane(cq.Plane(cq.Vector(0.0, 0.0, 0.0), cq.Vector(1.0, 0.0, 0.0), cq.Vector(0.0, 0.0, 1.0)))\nloop0=wp_sketch0.moveTo(0.390625, 0.0).lineTo(0.390625, 0.390625).lineTo(0.0, 0.390625).lineTo(0.0, 0.0).close()\nsolid0=wp_sketch0.add(loop0).extrude(0.75)\nsolid=solid0\n",
        "output": "User:<image>Generate the CADQuery code needed to create the CAD for the provided image. Just the code, no other words.\nAssistant: let cube = new CQ.Rectangle(0, 0, 1, 1);"
    },
    {
        "cadquery": "import cadquery as cq\n# Generating a workplane for sketch 0\nwp_sketch0 = cq.Workplane(cq.Plane(cq.Vector(-0.296875, 0.0, 0.0), cq.Vector(1.0, 6.123233995736766e-17, -6.123233995736766e-17), cq.Vector(6.123233995736766e-17, -1.0, 6.123233995736766e-17)))\nloop0=wp_sketch0.moveTo(0.0, 0.0).threePointArc((0.3, -0.3), (0.6, 0.0)).lineTo(0.6, 0.48947368421052634).threePointArc((0.31067337274266016, 0.7495935831129135), (0.007894736842105263, 0.5052631578947369)).lineTo(0.0, 0.0).close()\nloop1=wp_sketch0.moveTo(0.3, 0.0).circle(0.19736842105263158)\nloop2=wp_sketch0.moveTo(0.3, 0.45).circle(0.19736842105263158)\nsolid0=wp_sketch0.add(loop0).add(loop1).add(loop2).extrude(0.1484375, both=True)\nsolid=solid0\n",
        "output": "User:<image>Generate the CADQuery code needed to create the CAD for the provided image. Just the code, no other words.\nAssistant: CADQuery(modelId: \"1\", geometry: [Geometry.rectangle(width: 2, height: 2)])"
    }
]